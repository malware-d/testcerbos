import type { DerivedRoles } from "./DerivedRoles";
import type { ExportConstants } from "./ExportConstants";
import type { ExportVariables } from "./ExportVariables";
import type { PrincipalPolicy } from "./PrincipalPolicy";
import type { ResourcePolicy } from "./ResourcePolicy";
import type { RolePolicy } from "./RolePolicy";
/**
 * A {@link https://docs.cerbos.dev/cerbos/latest/policies/ | policy} definition.
 *
 * @public
 */
export type Policy = DerivedRoles | ExportConstants | ExportVariables | PrincipalPolicy | ResourcePolicy | RolePolicy;
/**
 * Type guard to check if a {@link Policy} is a set of {@link DerivedRoles}.
 *
 * @public
 */
export declare function policyIsDerivedRoles(policy: Policy): policy is DerivedRoles;
/**
 * Type guard to check if a {@link Policy} is a set of {@link ExportConstants}.
 *
 * @public
 */
export declare function policyIsExportConstants(policy: Policy): policy is ExportConstants;
/**
 * Type guard to check if a {@link Policy} is a set of {@link ExportVariables}.
 *
 * @public
 */
export declare function policyIsExportVariables(policy: Policy): policy is ExportVariables;
/**
 * Type guard to check if a {@link Policy} is a {@link PrincipalPolicy}.
 *
 * @public
 */
export declare function policyIsPrincipalPolicy(policy: Policy): policy is PrincipalPolicy;
/**
 * Type guard to check if a {@link Policy} is a {@link ResourcePolicy}.
 *
 * @public
 */
export declare function policyIsResourcePolicy(policy: Policy): policy is ResourcePolicy;
/** @alpha */
export declare function policyIsRolePolicy(policy: Policy): policy is RolePolicy;
//# sourceMappingURL=Policy.d.ts.map