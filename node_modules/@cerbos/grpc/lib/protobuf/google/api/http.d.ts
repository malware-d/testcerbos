import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
export declare const protobufPackage = "google.api";
export interface HttpRule {
    selector: string;
    pattern?: {
        $case: "get";
        get: string;
    } | {
        $case: "put";
        put: string;
    } | {
        $case: "post";
        post: string;
    } | {
        $case: "delete";
        delete: string;
    } | {
        $case: "patch";
        patch: string;
    } | {
        $case: "custom";
        custom: CustomHttpPattern;
    } | undefined;
    body: string;
    responseBody: string;
    additionalBindings: HttpRule[];
}
export interface CustomHttpPattern {
    kind: string;
    path: string;
}
export declare const HttpRule: MessageFns<HttpRule>;
export declare const CustomHttpPattern: MessageFns<CustomHttpPattern>;
export interface MessageFns<T> {
    encode(message: T, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): T;
}
//# sourceMappingURL=http.d.ts.map